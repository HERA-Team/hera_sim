# This document is intended to serve as a template for constructing new
# configuration YAMLs for use with the command-line interface.

bda:
    max_decorr: 0
    pre_fs_int_time: !dimensionful 
        value: 0.1
        units: 's'
    corr_FoV_angle: !dimensionful
        value: 20
        units: 'deg'
    max_time: !dimensionful
        value: 16
        units: 's'
    corr_int_time: !dimensionful
        value: 2
        units: 's'
filing:
    outdir: '.'
    outfile_name: 'quick_and_dirty_sim'
    output_format: 'uvh5'
    clobber: True
    kwargs: {}
# freq and time entries currently configured for hera_sim use
freq:
    n_freq: 100
    channel_width: 122070.3125
    start_freq: 46920776.3671875
time:
    n_times: 10
    integration_time: 8.59
    start_time: 2457458.1738949567
telescope:
    # generate from an antenna layout csv
    # array_layout: 'antenna_layout.csv'
    # generate using hera_sim.antpos
    array_layout: !antpos
        array_type: "hex"
        hex_num: 3
        sep: 14.6
        split_core: False
        outriggers: 0
    # TODO: check how pyuvsim handles beams, see if YAML constructor needs
    # to be updated/modified.
    omega_p: !Beam
        # XXX non-absolute paths are assumed to be specified relative to the
        # hera_sim data path
        datafile: HERA_H2C_BEAM_MODEL.npz
        interp_kwargs:
            interpolator: interp1d
            fill_value: extrapolate
            # if you want to use a polynomial interpolator instead, then
            # interpolator: poly1d
            # kwargs not accepted for this; see numpy.poly1d documentation
defaults:
    # XXX: THIS MUST BE A STRING SPECIFYING A DEFAULT CONFIG FILE
    # OR ONE OF THE SEASON DEFAULTS
    default_config: 'h2c'
systematics:
    rfi:
        # see hera_sim.rfi documentation for details on parameter names
        rfi_stations:
            stations: !!null
        rfi_impulse:
            chance: 0.001
            strength: 20.0
        rfi_scatter:
            chance: 0.0001
            strength: 10.0
            std: 10.0
        rfi_dtv:
            freq_min: 0.174
            freq_max: 0.214
            width: 0.008
            chance: 0.0001
            strength: 10.0
            strength_std: 10.0
    sigchain:
        gains:
            gain_spread: 0.1
            dly_rng: [-20, 20]
            bp_poly: HERA_H1C_BANDPASS.npy
        # XXX: the gen_reflection_gains function is somewhat difficult
        # to work with in a general way at the moment; this should be
        # addressed in the future, since there currently is not a neat
        # way of handling this from a configuration file
        sigchain_reflections: # TODO: make a YAML constructor for this?
            amp: !!null
            dly: !!null
            phs: !!null
    crosstalk:
        # only one of the two crosstalk methods should be specified
        gen_whitenoise_xtalk:
            amplitude: 3.0
        # gen_cross_coupling_xtalk:
            # the following parameters are all floats, but it's a little
            # unclear what the best way to handle this for an array is;
            # the current implementation would treat all antennas the same
            # amp: !!null
            # dly: !!null
            # phs: !!null
    noise:
        thermal_noise:
            Trx: 0
sky:
    Tsky_mdl: !Tsky
        # XXX non-absolute paths are assumed to be relative to the hera_sim
        # data folder
        datafile: HERA_Tsky_Reformatted.npz
        # interp kwargs are passed to scipy.interp.RectBivariateSpline
        interp_kwargs: 
            pol: xx # this is popped when making a Tsky object
        # TODO: add functionality for handling multiple polarizations
        # this involves updating the YAML constructor, Simulator, and 
        # Tsky Interpolator object
        #
    eor:
        noiselike_eor:
            eor_amp: 0.00001
            min_delay: !!null
            max_delay: !!null
            fringe_filter_type: tophat
            fringe_filter_kwargs: {}
    foregrounds:
        # if using hera_sim.foregrounds
        diffuse_foreground:
            standoff: 0
            delay_filter_type: tophat
            delay_filter_normalize: !!null
            fringe_filter_type: tophat
            fringe_filter_kwargs: {}
        pntsrc_foreground:
            nsrcs: 1000
            Smin: 0.3
            Smax: 300
            beta: -1.5
            spectral_index_mean: -1.0
            spectral_index_std: 0.5
            reference_freq: 0.5
        # TODO: add support for specifying catalogs here, e.g. GLEAM, eGSM
        # need not be implemented until support for other simulators is added
        # it might be possible to solve this with a simple YAML constructor,
        # but this won't be a worry until we support other simulators


simulation:
    # specify which components to simulate in desired order
    # this should be a complete list of the things to include if hera_sim
    # is the simulator being used. this will necessarily look different
    # if other simulators are used, but that's not implemented yet
    #
    components: [foregrounds,  
                 noise, 
                 eor, 
                 rfi, 
                 sigchain, ]
    # list particular model components to exclude from simulation
    exclude: [sigchain_reflections,
              gen_whitenoise_xtalk,]

